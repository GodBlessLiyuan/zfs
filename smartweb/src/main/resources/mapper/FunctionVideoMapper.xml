<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rpa.web.mapper.FunctionVideoMapper">
  <resultMap id="BaseResultMap" type="com.rpa.web.pojo.FunctionVideoPO">
    <id column="function_id" jdbcType="INTEGER" property="functionId" />
    <result column="fun_name" jdbcType="CHAR" property="funName" />
    <result column="url" jdbcType="CHAR" property="url" />
    <result column="extra" jdbcType="CHAR" property="extra" />
    <result column="a_id" jdbcType="INTEGER" property="aId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    function_id, fun_name, url, extra, a_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_functionvideo
    where function_id = #{functionId,jdbcType=INTEGER}
  </select>

  <select id="query" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_functionvideo
    <where>
      <if test="funName != null and funName != ''">
        AND fun_name like '%' #{funName} '%'
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_functionvideo
    where function_id = #{functionId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.rpa.web.pojo.FunctionVideoPO">
    insert into t_functionvideo (function_id, fun_name, url, 
      extra, a_id, create_time, 
      update_time)
    values (#{functionId,jdbcType=INTEGER}, #{funName,jdbcType=CHAR}, #{url,jdbcType=CHAR}, 
      #{extra,jdbcType=CHAR}, #{aId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.rpa.web.pojo.FunctionVideoPO">
    insert into t_functionvideo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="functionId != null">
        function_id,
      </if>
      <if test="funName != null">
        fun_name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="extra != null">
        extra,
      </if>
      <if test="aId != null">
        a_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="functionId != null">
        #{functionId,jdbcType=INTEGER},
      </if>
      <if test="funName != null">
        #{funName,jdbcType=CHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=CHAR},
      </if>
      <if test="extra != null">
        #{extra,jdbcType=CHAR},
      </if>
      <if test="aId != null">
        #{aId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rpa.web.pojo.FunctionVideoPO">
    update t_functionvideo
    <set>
      <if test="funName != null">
        fun_name = #{funName,jdbcType=CHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=CHAR},
      </if>
      <if test="extra != null">
        extra = #{extra,jdbcType=CHAR},
      </if>
      <if test="aId != null">
        a_id = #{aId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where function_id = #{functionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rpa.web.pojo.FunctionVideoPO">
    update t_functionvideo
    set fun_name = #{funName,jdbcType=CHAR},
      url = #{url,jdbcType=CHAR},
      extra = #{extra,jdbcType=CHAR},
      a_id = #{aId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where function_id = #{functionId,jdbcType=INTEGER}
  </update>
</mapper>