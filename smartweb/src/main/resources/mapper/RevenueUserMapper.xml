<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rpa.web.mapper.RevenueUserMapper">
  <resultMap id="BaseResultMap" type="com.rpa.web.pojo.RevenueUserPO">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="invite_count" jdbcType="INTEGER" property="inviteCount" />
    <result column="register_count" jdbcType="BIGINT" property="registerCount" />
    <result column="total_revenue" jdbcType="BIGINT" property="totalRevenue" />
    <result column="withdraw" jdbcType="BIGINT" property="withdraw" />
    <result column="withdraw_time" jdbcType="INTEGER" property="withdrawTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, invite_count, register_count, total_revenue, withdraw, withdraw_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_revenue_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_revenue_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rpa.web.pojo.RevenueUserPO">
    insert into t_revenue_user (user_id, invite_count, register_count, 
      total_revenue, withdraw, withdraw_time
      )
    values (#{userId,jdbcType=BIGINT}, #{inviteCount,jdbcType=INTEGER}, #{registerCount,jdbcType=BIGINT}, 
      #{totalRevenue,jdbcType=BIGINT}, #{withdraw,jdbcType=BIGINT}, #{withdrawTime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rpa.web.pojo.RevenueUserPO">
    insert into t_revenue_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="inviteCount != null">
        invite_count,
      </if>
      <if test="registerCount != null">
        register_count,
      </if>
      <if test="totalRevenue != null">
        total_revenue,
      </if>
      <if test="withdraw != null">
        withdraw,
      </if>
      <if test="withdrawTime != null">
        withdraw_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="inviteCount != null">
        #{inviteCount,jdbcType=INTEGER},
      </if>
      <if test="registerCount != null">
        #{registerCount,jdbcType=BIGINT},
      </if>
      <if test="totalRevenue != null">
        #{totalRevenue,jdbcType=BIGINT},
      </if>
      <if test="withdraw != null">
        #{withdraw,jdbcType=BIGINT},
      </if>
      <if test="withdrawTime != null">
        #{withdrawTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rpa.web.pojo.RevenueUserPO">
    update t_revenue_user
    <set>
      <if test="inviteCount != null">
        invite_count = #{inviteCount,jdbcType=INTEGER},
      </if>
      <if test="registerCount != null">
        register_count = #{registerCount,jdbcType=BIGINT},
      </if>
      <if test="totalRevenue != null">
        total_revenue = #{totalRevenue,jdbcType=BIGINT},
      </if>
      <if test="withdraw != null">
        withdraw = #{withdraw,jdbcType=BIGINT},
      </if>
      <if test="withdrawTime != null">
        withdraw_time = #{withdrawTime,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rpa.web.pojo.RevenueUserPO">
    update t_revenue_user
    set invite_count = #{inviteCount,jdbcType=INTEGER},
      register_count = #{registerCount,jdbcType=BIGINT},
      total_revenue = #{totalRevenue,jdbcType=BIGINT},
      withdraw = #{withdraw,jdbcType=BIGINT},
      withdraw_time = #{withdrawTime,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>